services:
  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ message broker port
      - "15672:15672" # RabbitMQ management UI port
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  postgres:
    image: postgres
    container_name: postgres_docker
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}" # PostgreSQL database port
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

  migrate:
    image: migrate/migrate
    depends_on:
      - postgres
    volumes:
      - ./cmd/migrate/migrations:/migrations
    command: ["-path", "/migrations", "-database",  "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:$POSTGRES_PORT/$POSTGRES_DB?sslmode=disable", "up"]
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
  
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" # SMTP server port
      - "8025:8025" # Web UI port

  api:
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    container_name: api
    depends_on:
      - postgres
      - migrate
    environment:
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_USER: ${POSTGRES_USER}
      DB_NAME: ${POSTGRES_DB}
      DB_HOST: postgres
      DB_PORT: ${POSTGRES_PORT}
    ports:
      - "8080:8080"